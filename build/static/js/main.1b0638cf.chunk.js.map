{"version":3,"sources":["components/menu/index.jsx","content/left/index.jsx","utils/http.js","components/find/index.jsx","components/add/index.jsx","content/center/index.jsx","content/index.jsx","app.jsx","index.js"],"names":["SubMenu","Menu","WrapperMenu","history","useHistory","onClick","key","push","style","width","height","flexBasis","flexGrow","flexShrink","background","defaultSelectedKeys","defaultOpenKeys","mode","icon","AppstoreOutlined","title","Item","Left","get","url","params","Promise","resolve","reject","axios","then","response","catch","err","defaults","baseURL","columns1","dataIndex","render","e","display","marginRight","columns2","moment","format","Find","useState","data1","setData1","data2","setData2","loading1","setloading1","loading2","setloading2","find","a","res","data","length","message","info","find1","className","type","size","loading","columns","dataSource","pagination","TextArea","Input","form","createForm","SchemaField","createSchemaField","components","FormItem","Select","setLoading","onAutoSubmit","formDate","FormData","append","name","category","content","config","post","headers","success","init","setValues","console","log","String","required","default","enum","label","value","x-component","x-decorator","x-reactions","target","fulfill","schema","state","visible","block","Center","path","to","exact","component","Add","WrapperContent","React","memo","App","locale","ReactDOM","document","getElementById"],"mappings":"qTAIQA,EAAYC,IAAZD,QAgCOE,EA9BK,WAClB,IAAMC,EAAUC,cAIhB,OACE,cAAC,IAAD,CACEC,QALS,SAACC,GACZH,EAAQI,KAAR,WAAiBD,EAAIA,OAKnBE,MAAO,CACLC,MAAO,IACPC,OAAQ,OACRC,UAAW,QACXC,SAAU,EACVC,WAAY,EACZC,WAAY,0BAEdC,oBAAqB,CAAC,QACtBC,gBAAiB,CAAC,QAClBC,KAAK,SAZP,SAcE,eAACjB,EAAD,CAAoBkB,KAAM,cAACC,EAAA,EAAD,IAAsBC,MAAM,2BAAtD,UAEE,cAAC,IAAKC,KAAN,sCAAe,QACf,cAAC,IAAKA,KAAN,sCAAe,SAHJ,WCnBJC,EAHF,WACX,OAAO,cAAC,EAAD,K,sFCKF,SAASC,EAAIC,GAAmB,IAAdC,EAAa,uDAAJ,GAC9B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,IAAMN,IAAIC,EAAK,CACXC,OAAQA,IAEPK,MAAK,SAAAC,GACFJ,EAAQI,MAEXC,OAAM,SAAAC,GACHL,EAAOK,SAdvBJ,IAAMK,SAASC,QAAU,8B,uBCAnBC,G,OAAW,CACf,CACEhB,MAAO,2BACPiB,UAAW,OACXC,OAAQ,SAACC,GACP,OACE,sBACE/B,MAAO,CAAEC,MAAO,QAAS+B,QAAS,OAAQC,YAAa,UADzD,SAGGF,MAKT,CACEnB,MAAO,2BACPiB,UAAW,UACXC,OAAQ,SAACC,GACP,OACE,sBACE/B,MAAO,CAAEC,MAAO,QAAS+B,QAAS,OAAQC,YAAa,UADzD,SAGGF,QAMLG,EAAW,CACf,CACEtB,MAAO,eACPiB,UAAW,OACXC,OAAQ,SAACC,GACP,OACE,sBACE/B,MAAO,CAAEC,MAAO,QAAS+B,QAAS,OAAQC,YAAa,UADzD,SAGGF,MAKT,CACEnB,MAAO,2BACPiB,UAAW,YAEb,CACEjB,MAAO,eACPiB,UAAW,UACXC,OAAQ,SAACC,GACP,OACE,sBACE/B,MAAO,CAAEC,MAAO,QAAS+B,QAAS,OAAQC,YAAa,UADzD,SAGGF,MAKT,CACEnB,MAAO,2BACPiB,UAAW,cACXC,OAAQ,SAACC,GACP,OAAOI,IAAOJ,GAAGK,OAAO,iBAsDfC,EAjDF,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAESF,mBAAS,IAFlB,mBAEVG,EAFU,KAEHC,EAFG,OAGeJ,oBAAS,GAHxB,mBAGVK,EAHU,KAGAC,EAHA,OAIeN,oBAAS,GAJxB,mBAIVO,EAJU,KAIAC,EAJA,KAKXC,EAAI,uCAAG,4BAAAC,EAAA,6DACXJ,GAAY,GADD,SAEO7B,EAAI,iBAFX,OAELkC,EAFK,OAGXL,GAAY,KACPK,EAAIC,MAAQD,EAAIC,KAAKC,OAAS,IACjCC,IAAQC,KAAK,kCAEfb,EAASS,EAAIC,MAPF,2CAAH,qDASJI,EAAK,uCAAG,4BAAAN,EAAA,6DACZF,GAAY,GADA,SAEM/B,EAAI,aAFV,UAENkC,EAFM,QAGHC,MAAQD,EAAIC,KAAKC,OAAS,IACjCC,IAAQC,KAAK,wCAEfP,GAAY,GACZJ,EAASO,EAAIC,MAPD,2CAAH,qDASX,OACE,sBAAKK,UAAW,OAAhB,UACE,cAAC,IAAD,CAAQC,KAAK,UAAUC,KAAM,QAAS5D,QAASkD,EAAMW,QAASf,EAA9D,sCAGA,cAAC,IAAD,CACEgB,QAAS/B,EACTgC,WAAYrB,EACZgB,UAAW,SACX3C,MAAO,iBAAM,4BACbiD,YAAY,IAEd,cAAC,IAAD,CAAQL,KAAK,UAAUC,KAAM,QAAS5D,QAASyD,EAAOI,QAASb,EAA/D,kDAGA,cAAC,IAAD,CACEc,QAASzB,EACT0B,WAAYnB,EACZc,UAAW,SACX3C,MAAO,iBAAM,4BACbiD,YAAY,Q,iCC7GZC,G,OAAaC,IAAbD,UAEFE,EAAOC,cAEPC,EAAcC,YAAkB,CACpCC,YAAU,GACRC,aACAN,UACAO,YAHQ,sBAIRP,KAJQ,yBAKRD,GALQ,KASG,aAAO,IAAD,EACWxB,oBAAS,GADpB,mBACZoB,EADY,KACHa,EADG,KA0BnB,OACE,qBAAKhB,UAAU,MAAf,SACE,eAAC,IAAD,CAAMS,KAAMA,EAAMQ,aA1BL,SAACzC,GAChB,IAAI0C,EAAW,IAAIC,SACnBD,EAASE,OAAO,OAAQ5C,EAAE6C,MAC1BH,EAASE,OAAO,WAAY5C,EAAE8C,UAAY,gBAC1CJ,EAASE,OAAO,UAAW5C,EAAE+C,SAM7BP,GAAW,GFRR,SAAcvD,GAA2B,IAAtBkC,EAAqB,uDAAd,GAAG6B,EAAW,uDAAJ,GACvC,OAAO,IAAI7D,SAAQ,SAACC,EAASC,GACzBC,IAAM2D,KAAKhE,EAAKkC,EAAK6B,GAChBzD,MAAK,SAAAC,GACFJ,EAAQI,MAEXC,OAAM,SAAAC,GACHL,EAAOK,SEEnBuD,CAAK,YAAaP,EANL,CACXQ,QAAS,CACP,eAAgB,yBAKjB3D,MAAK,WACJiD,GAAW,GACXnB,IAAQ8B,QAAQ,4BAEhB,IAAMC,EAAO,CAAEP,KAAM,GAAIC,SAAU,qBAAOC,QAAS,IAC9C/C,EAAE8C,WACLM,EAAKN,SAAW,IAElBb,EAAKoB,UAAUD,MAEhB3D,OAAM,SAACO,GAAD,OAAOsD,QAAQC,IAAIvD,OAI1B,UACE,eAACmC,EAAD,WACE,cAACA,EAAYqB,OAAb,CACEC,UAAQ,EACRZ,KAAK,SACLhE,MAAM,2BACN6E,QAAQ,KACRC,KAAM,CACJ,CAAEC,MAAO,eAAMC,MAAO,MACtB,CAAED,MAAO,2BAAQC,MAAO,OAE1BC,cAAY,SACZC,cAAY,WACZC,cAAa,CACX,CACEC,OAAQ,OACRC,QAAS,CAIPC,OAAQ,CACNtF,MAAO,qFAIb,CACEoF,OAAQ,UACRC,QAAS,CACPC,OAAQ,CACNtF,MAAO,kFACP,cACE,kDAIR,CACEoF,OAAQ,WACRC,QAAS,CACPE,MAAO,CACLC,QAAS,iCAMnB,cAAClC,EAAYqB,OAAb,CACEX,KAAK,OACLhE,MAAM,2BACNiF,cAAY,QACZC,cAAY,WACZN,UAAQ,IAEV,cAACtB,EAAYqB,OAAb,CACEX,KAAK,WACLhE,MAAM,2BACNiF,cAAY,SACZC,cAAY,WACZL,QAAQ,qBACRD,UAAQ,EACRE,KAAM,CACJ,CAAEC,MAAO,qBAAOC,MAAO,sBACvB,CAAED,MAAO,2BAAQC,MAAO,4BACxB,CAAED,MAAO,qBAAOC,MAAO,sBACvB,CAAED,MAAO,qBAAOC,MAAO,yBAG3B,cAAC1B,EAAYqB,OAAb,CACEX,KAAK,UACLhE,MAAM,2BACNiF,cAAY,WACZC,cAAY,WACZN,UAAQ,OAGZ,qBAAKjC,UAAU,MAAf,SACE,cAAC,IAAD,CAAQ8C,OAAK,EAAC5C,KAAK,QAAQC,QAASA,EAApC,kCCrGK4C,G,OAZA,WACb,OAEI,cADF,CACE,OAAK/C,UAAW,SAAhB,UACI,cAAC,IAAD,CAAUgD,KAAK,IAAIC,GAAG,UACtB,cAAC,IAAD,CAAOC,OAAK,EAACF,KAAK,QAAQG,UAAWrE,IACrC,cAAC,IAAD,CAAOoE,OAAK,EAACF,KAAK,OAAOG,UAAWC,SCZxCC,EAAiB,WAErB,OADAvB,QAAQC,IAAI,QAEV,sBAAK/B,UAAW,MAAhB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QAKSsD,MAAMC,KAAKF,G,kBCDXG,MAVf,WACE,OACE,cAAC,IAAD,UACE,qBAAKxD,UAAW,MAAhB,SACE,cAAC,EAAD,S,4BCERpB,IAAO6E,OAAO,SACdC,IAASnF,OACP,cAAC,EAAD,IACAoF,SAASC,eAAe,W","file":"static/js/main.1b0638cf.chunk.js","sourcesContent":["import { Menu } from 'antd'\r\nimport { AppstoreOutlined } from '@ant-design/icons'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst { SubMenu } = Menu\r\n\r\nconst WrapperMenu = () => {\r\n  const history = useHistory()\r\n  const push = (key) => {\r\n    history.push(`/${key.key}`)\r\n  }\r\n  return (\r\n    <Menu\r\n      onClick={push}\r\n      style={{\r\n        width: 256,\r\n        height: '100%',\r\n        flexBasis: '256px',\r\n        flexGrow: 0,\r\n        flexShrink: 0,\r\n        background: 'rgba(81, 47, 124, 0.1)',\r\n      }}\r\n      defaultSelectedKeys={['find']}\r\n      defaultOpenKeys={['sub1']}\r\n      mode=\"inline\"\r\n    >\r\n      <SubMenu key=\"sub1\" icon={<AppstoreOutlined />} title=\"操作中心\">\r\n        {/* <Menu.ItemGroup key=\"g1\" title=\"题目\"> */}\r\n        <Menu.Item key=\"find\">抽取题目</Menu.Item>\r\n        <Menu.Item key=\"add\">录入题目</Menu.Item>\r\n        {/* </Menu.ItemGroup> */}\r\n      </SubMenu>\r\n    </Menu>\r\n  )\r\n}\r\n\r\nexport default WrapperMenu\r\n","import React from 'react'\r\nimport Menu from '../../components/menu'\r\n\r\n\r\nconst Left = ()=>{\r\n  return <Menu></Menu>\r\n}\r\nexport default Left","//封装常用方法\n\nimport axios from 'axios';\n\n// axios.defaults.timeout = 5000;\naxios.defaults.baseURL = 'http://101.132.132.215:3000';\n// axios.defaults.baseURL = 'http://localhost:3000';\n\n\n//封装get方法\nexport function get(url, params = {}) {\n    return new Promise((resolve, reject) => {\n        axios.get(url, {\n            params: params\n        })\n            .then(response => {\n                resolve(response);\n            })\n            .catch(err => {\n                reject(err);\n            })\n    })\n}\n\n//封装post请求\nexport function post(url, data = {},config={}) {\n    return new Promise((resolve, reject) => {\n        axios.post(url, data,config)\n            .then(response => {\n                resolve(response);\n            })\n            .catch(err => {\n                reject(err);\n            })\n    })\n}\n\n//封装put请求\nexport function put(url, data = {}) {\n    return new Promise((resolve, reject) => {\n        axios.put(url, data)\n            .then(response => {\n                resolve(response);\n            })\n            .catch(err => {\n                reject(err);\n            })\n    })\n}\n\n//封装delete请求\nexport function deleteDate(url){\n    return new Promise((resolve, reject) => {\n        axios.delete(url)\n            .then(response => {\n                resolve(response);\n            })\n            .catch(err => {\n                reject(err);\n            })\n    })\n}\n\n// //请求成功提示消息\n// export function success(str) {\n//     return this.$message({\n//         message: str,\n//         type: 'success'\n//     })\n// }\n//\n// //请求失败提示消息\n// export function fail(str) {\n//     return this.$message({\n//         message: str,\n//         type: 'error'\n//     })\n// }\n","import React, { useState } from 'react'\r\nimport { Table, Radio, Button, message } from 'antd'\r\nimport { get } from '../../utils/http'\r\nimport moment from 'moment'\r\nimport './index.css'\r\nconst columns1 = [\r\n  {\r\n    title: '书籍名称',\r\n    dataIndex: 'name',\r\n    render: (e) => {\r\n      return (\r\n        <span\r\n          style={{ width: '200px', display: 'flex', marginRight: '-180px' }}\r\n        >\r\n          {e}\r\n        </span>\r\n      )\r\n    },\r\n  },\r\n  {\r\n    title: '框架章节',\r\n    dataIndex: 'content',\r\n    render: (e) => {\r\n      return (\r\n        <span\r\n          style={{ width: '200px', display: 'flex', marginRight: '-180px' }}\r\n        >\r\n          {e}\r\n        </span>\r\n      )\r\n    },\r\n  },\r\n]\r\nconst columns2 = [\r\n  {\r\n    title: '名称',\r\n    dataIndex: 'name',\r\n    render: (e) => {\r\n      return (\r\n        <span\r\n          style={{ width: '200px', display: 'flex', marginRight: '-180px' }}\r\n        >\r\n          {e}\r\n        </span>\r\n      )\r\n    },\r\n  },\r\n  {\r\n    title: '题目类型',\r\n    dataIndex: 'category',\r\n  },\r\n  {\r\n    title: '描述',\r\n    dataIndex: 'content',\r\n    render: (e) => {\r\n      return (\r\n        <span\r\n          style={{ width: '200px', display: 'flex', marginRight: '-180px' }}\r\n        >\r\n          {e}\r\n        </span>\r\n      )\r\n    },\r\n  },\r\n  {\r\n    title: '创建时间',\r\n    dataIndex: 'create_time',\r\n    render: (e) => {\r\n      return moment(e).format('YYYY-MM-DD')\r\n    },\r\n  },\r\n]\r\n\r\nconst Find = () => {\r\n  const [data1, setData1] = useState([])\r\n  const [data2, setData2] = useState([])\r\n  const [loading1, setloading1] = useState(false)\r\n  const [loading2, setloading2] = useState(false)\r\n  const find = async () => {\r\n    setloading1(true)\r\n    const res = await get('/getFramework')\r\n    setloading1(false)\r\n    if (!res.data || res.data.length < 1) {\r\n      message.info('未录入框架')\r\n    }\r\n    setData1(res.data)\r\n  }\r\n  const find1 = async () => {\r\n    setloading2(true)\r\n    const res = await get('/getTopic')\r\n    if (!res.data || res.data.length < 1) {\r\n      message.info('未查询到数据')\r\n    }\r\n    setloading2(false)\r\n    setData2(res.data)\r\n  }\r\n  return (\r\n    <div className={'find'}>\r\n      <Button type=\"primary\" size={'large'} onClick={find} loading={loading1}>\r\n        查询框架\r\n      </Button>\r\n      <Table\r\n        columns={columns1}\r\n        dataSource={data1}\r\n        className={'table1'}\r\n        title={() => '框架默写'}\r\n        pagination={false}\r\n      />\r\n      <Button type=\"primary\" size={'large'} onClick={find1} loading={loading2}>\r\n        获取模拟练题\r\n      </Button>\r\n      <Table\r\n        columns={columns2}\r\n        dataSource={data2}\r\n        className={'table2'}\r\n        title={() => '模拟练题'}\r\n        pagination={false}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Find\r\n","import React, { useState } from 'react'\r\nimport { createForm } from '@formily/core'\r\nimport { createSchemaField, FormConsumer } from '@formily/react'\r\nimport { Form, FormItem, Input, Select, Submit } from '@formily/antd'\r\nimport { message } from 'antd'\r\nimport { post } from '../../utils/http'\r\nimport './index.css'\r\nconst { TextArea } = Input\r\n\r\nconst form = createForm()\r\n\r\nconst SchemaField = createSchemaField({\r\n  components: {\r\n    FormItem,\r\n    Input,\r\n    Select,\r\n    Input,\r\n    TextArea,\r\n  },\r\n})\r\n\r\nexport default () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const onSubmit = (e) => {\r\n    let formDate = new FormData()\r\n    formDate.append('name', e.name)\r\n    formDate.append('category', e.category || '框架')\r\n    formDate.append('content', e.content)\r\n    let config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    }\r\n    setLoading(true)\r\n    post('/addTopic', formDate, config)\r\n      .then(function () {\r\n        setLoading(false)\r\n        message.success('创建成功')\r\n        // form.reset()\r\n        const init = { name: '', category: '简答题', content: '' }\r\n        if (!e.category) {\r\n          init.category = ''\r\n        }\r\n        form.setValues(init)\r\n      })\r\n      .catch((e) => console.log(e))\r\n  }\r\n  return (\r\n    <div className=\"add\">\r\n      <Form form={form} onAutoSubmit={onSubmit}>\r\n        <SchemaField>\r\n          <SchemaField.String\r\n            required\r\n            name=\"select\"\r\n            title=\"录入类型\"\r\n            default=\"v2\"\r\n            enum={[\r\n              { label: '框架', value: 'v1' },\r\n              { label: '真题题目', value: 'v2' },\r\n            ]}\r\n            x-component=\"Select\"\r\n            x-decorator=\"FormItem\"\r\n            x-reactions={[\r\n              {\r\n                target: 'name',\r\n                fulfill: {\r\n                  // state: {\r\n                  //   display: '{{$self.value}}',\r\n                  // },\r\n                  schema: {\r\n                    title: '{{$self.value === \"v1\"?\"书籍名称\" :\"真题题目\"}}',\r\n                  },\r\n                },\r\n              },\r\n              {\r\n                target: 'content',\r\n                fulfill: {\r\n                  schema: {\r\n                    title: '{{$self.value === \"v1\"?\"框架章节\" :\"题目内容\"}}',\r\n                    'x-component':\r\n                      '{{$self.value === \"v1\"?\"Input\" :\"TextArea\"}}',\r\n                  },\r\n                },\r\n              },\r\n              {\r\n                target: 'category',\r\n                fulfill: {\r\n                  state: {\r\n                    visible: '{{$self.value === \"v2\"}}',\r\n                  },\r\n                },\r\n              },\r\n            ]}\r\n          />\r\n          <SchemaField.String\r\n            name=\"name\"\r\n            title=\"真题题目\"\r\n            x-component=\"Input\"\r\n            x-decorator=\"FormItem\"\r\n            required\r\n          />\r\n          <SchemaField.String\r\n            name=\"category\"\r\n            title=\"题目类别\"\r\n            x-component=\"Select\"\r\n            x-decorator=\"FormItem\"\r\n            default=\"简答题\"\r\n            required\r\n            enum={[\r\n              { label: '简答题', value: '简答题' },\r\n              { label: '名词解释', value: '名词解释' },\r\n              { label: '论述题', value: '论述题' },\r\n              { label: '综合题', value: '综合题' },\r\n            ]}\r\n          />\r\n          <SchemaField.String\r\n            name=\"content\"\r\n            title=\"题目内容\"\r\n            x-component=\"TextArea\"\r\n            x-decorator=\"FormItem\"\r\n            required\r\n          />\r\n        </SchemaField>\r\n        <div className='btn'>\r\n          <Submit block size=\"large\" loading={loading}>\r\n            录入\r\n          </Submit>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n} from 'react-router-dom'\r\nimport Find from '../../components/find'\r\nimport Add from '../../components/add'\r\nimport './index.css'\r\n\r\nconst Center = () => {\r\n  return (\r\n    // <Router>\r\n      <div className={'router'}>\r\n          <Redirect path=\"/\" to=\"/find\" />\r\n          <Route exact path=\"/find\" component={Find} />\r\n          <Route exact path=\"/add\" component={Add} />\r\n      </div>\r\n    // </Router>\r\n  )\r\n}\r\n\r\nexport default Center\r\n","import React from 'react'\r\nimport Left from './left'\r\nimport './index.css'\r\nimport Center from './center'\r\n\r\nconst WrapperContent = () => {\r\n  console.log('fick')\r\n  return (\r\n    <div className={'box'}>\r\n      <Left></Left>\r\n      <Center></Center>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(WrapperContent)\r\n","import React from 'react'\nimport Content from './content/index'\nimport './app.css'\nimport { BrowserRouter as Router } from 'react-router-dom'\nfunction App() {\n  return (\n    <Router>\n      <div className={'app'}>\n        <Content></Content>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\n// import 'antd/dist/antd.css';\nimport './index.css';\nimport '@formily/antd/dist/antd.css';\nimport 'antd/dist/antd.css';\n\nmoment.locale('zh-cn');\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}