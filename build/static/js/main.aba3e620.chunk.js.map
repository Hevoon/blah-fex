{"version":3,"sources":["components/menu/index.jsx","content/left/index.jsx","utils/http.js","store/index.js","components/find/index.jsx","components/add/index.jsx","components/all/index.jsx","content/center/index.jsx","content/index.jsx","app.jsx","index.js"],"names":["SubMenu","Menu","WrapperMenu","history","useHistory","onClick","key","push","style","width","height","flexBasis","flexGrow","flexShrink","background","defaultSelectedKeys","defaultOpenKeys","mode","icon","AppstoreOutlined","title","Item","Left","get","url","params","Promise","resolve","reject","axios","then","response","catch","err","post","data","config","defaults","baseURL","framework","atom","default","undefined","topic","columns1","dataIndex","render","e","display","marginRight","columns2","moment","format","Find","useRecoilState","data1","setData1","data2","setData2","useState","loading1","setloading1","loading2","setloading2","find","a","res","length","message","info","find1","className","fontSize","fontWeight","marginBottom","type","size","loading","columns","dataSource","pagination","TextArea","Input","form","createForm","SchemaField","createSchemaField","components","FormItem","Select","setLoading","onAutoSubmit","formDate","FormData","append","name","category","content","headers","success","init","setValues","console","log","String","required","enum","label","value","x-component","x-decorator","x-reactions","target","fulfill","schema","state","visible","block","All","setData","setVisible","current","setCurrent","total","setTotal","search","setSearch","inputValue","setInputValue","setInit","id","setId","max","Math","floor","useEffect","run","useDebounceFn","wait","deleteTopic","handleEditor","values","justifyContent","setInitialValues","onOpen","danger","placeholder","allowClear","prefix","SearchOutlined","onChange","pageSize","p","destroyOnClose","onOk","onCancel","okText","cancelText","Center","path","to","exact","component","Add","WrapperContent","React","memo","App","locale","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.aba3e620.chunk.js","sourcesContent":["import { Menu } from 'antd'\r\nimport { AppstoreOutlined } from '@ant-design/icons'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst { SubMenu } = Menu\r\n\r\nconst WrapperMenu = () => {\r\n  const history = useHistory()\r\n  const push = (key) => {\r\n    history.push(`/${key.key}`)\r\n  }\r\n  return (\r\n    <Menu\r\n      onClick={push}\r\n      style={{\r\n        width: 256,\r\n        height: '100%',\r\n        flexBasis: '256px',\r\n        flexGrow: 0,\r\n        flexShrink: 0,\r\n        background: 'rgba(81, 47, 124, 0.1)',\r\n      }}\r\n      defaultSelectedKeys={['find']}\r\n      defaultOpenKeys={['sub1']}\r\n      mode=\"inline\"\r\n    >\r\n      <SubMenu key=\"sub1\" icon={<AppstoreOutlined />} title=\"操作中心\">\r\n        {/* <Menu.ItemGroup key=\"g1\" title=\"题目\"> */}\r\n        <Menu.Item key=\"find\">抽取题目</Menu.Item>\r\n        <Menu.Item key=\"add\">录入题目</Menu.Item>\r\n        <Menu.Item key=\"all\">题库</Menu.Item>\r\n        {/* </Menu.ItemGroup> */}\r\n      </SubMenu>\r\n    </Menu>\r\n  )\r\n}\r\n\r\nexport default WrapperMenu\r\n","import React from 'react'\r\nimport Menu from '../../components/menu'\r\n\r\n\r\nconst Left = ()=>{\r\n  return <Menu></Menu>\r\n}\r\nexport default Left","//封装常用方法\n\nimport axios from 'axios';\n\n// axios.defaults.timeout = 5000;\naxios.defaults.baseURL = 'http://101.132.132.215:3000';\n// axios.defaults.baseURL = 'http://localhost:3000';\n\n\n//封装get方法\nexport function get(url, params = {}) {\n    return new Promise((resolve, reject) => {\n        axios.get(url, {\n            params: params\n        })\n            .then(response => {\n                resolve(response);\n            })\n            .catch(err => {\n                reject(err);\n            })\n    })\n}\n\n//封装post请求\nexport function post(url, data = {},config={}) {\n    return new Promise((resolve, reject) => {\n        axios.post(url, data,config)\n            .then(response => {\n                resolve(response);\n            })\n            .catch(err => {\n                reject(err);\n            })\n    })\n}\n\n//封装put请求\nexport function put(url, data = {}) {\n    return new Promise((resolve, reject) => {\n        axios.put(url, data)\n            .then(response => {\n                resolve(response);\n            })\n            .catch(err => {\n                reject(err);\n            })\n    })\n}\n\n//封装delete请求\nexport function deleteDate(url){\n    return new Promise((resolve, reject) => {\n        axios.delete(url)\n            .then(response => {\n                resolve(response);\n            })\n            .catch(err => {\n                reject(err);\n            })\n    })\n}\n\n// //请求成功提示消息\n// export function success(str) {\n//     return this.$message({\n//         message: str,\n//         type: 'success'\n//     })\n// }\n//\n// //请求失败提示消息\n// export function fail(str) {\n//     return this.$message({\n//         message: str,\n//         type: 'error'\n//     })\n// }\n","import {\r\n  RecoilRoot,\r\n  atom,\r\n  selector,\r\n  useRecoilState,\r\n  useRecoilValue,\r\n} from 'recoil'\r\n\r\nexport const framework = atom({\r\n  key: 'framework',\r\n  default: undefined,\r\n})\r\n\r\nexport const topic = atom({\r\n  key: 'topic',\r\n  default: undefined,\r\n})\r\n","import React, { useState } from 'react'\r\nimport { Table, Radio, Button, message } from 'antd'\r\nimport {\r\n  useRecoilState,\r\n} from 'recoil'\r\nimport { get } from '../../utils/http'\r\nimport moment from 'moment'\r\nimport { topic, framework } from '../../store'\r\nimport './index.css'\r\nconst columns1 = [\r\n  {\r\n    title: '书籍名称',\r\n    dataIndex: 'name',\r\n    render: (e) => {\r\n      return (\r\n        <span\r\n          style={{ width: '200px', display: 'flex', marginRight: '-180px' }}\r\n        >\r\n          {e}\r\n        </span>\r\n      )\r\n    },\r\n  },\r\n  {\r\n    title: '框架章节',\r\n    dataIndex: 'content',\r\n    render: (e) => {\r\n      return (\r\n        <span\r\n          style={{ width: '200px', display: 'flex', marginRight: '-180px' }}\r\n        >\r\n          {e}\r\n        </span>\r\n      )\r\n    },\r\n  },\r\n]\r\nconst columns2 = [\r\n  {\r\n    title: '名称',\r\n    dataIndex: 'name',\r\n    render: (e) => {\r\n      return (\r\n        <span\r\n          style={{ width: '200px', display: 'flex', marginRight: '-180px' }}\r\n        >\r\n          {e}\r\n        </span>\r\n      )\r\n    },\r\n  },\r\n  {\r\n    title: '题目类型',\r\n    dataIndex: 'category',\r\n  },\r\n  {\r\n    title: '描述',\r\n    dataIndex: 'content',\r\n    render: (e) => {\r\n      return (\r\n        <span\r\n          style={{ width: '200px', display: 'flex', marginRight: '-180px' }}\r\n        >\r\n          {e}\r\n        </span>\r\n      )\r\n    },\r\n  },\r\n  {\r\n    title: '创建时间',\r\n    dataIndex: 'create_time',\r\n    render: (e) => {\r\n      return moment(e).format('YYYY-MM-DD')\r\n    },\r\n  },\r\n]\r\n\r\nconst Find = () => {\r\n  const [data1, setData1] = useRecoilState(framework) || []\r\n  const [data2, setData2] = useRecoilState(topic) || []\r\n  // const [data1, setData1] = useState([])\r\n  // const [data2, setData2] = useState([])\r\n  const [loading1, setloading1] = useState(false)\r\n  const [loading2, setloading2] = useState(false)\r\n  const find = async () => {\r\n    setloading1(true)\r\n    const res = await get('/getFramework')\r\n    setloading1(false)\r\n    if (!res.data || res.data.length < 1) {\r\n      message.info('未录入框架')\r\n    }\r\n    setData1(res.data)\r\n  }\r\n  const find1 = async () => {\r\n    setloading2(true)\r\n    const res = await get('/getTopic')\r\n    if (!res.data || res.data.length < 1) {\r\n      message.info('未查询到数据')\r\n    }\r\n    setloading2(false)\r\n    setData2(res.data)\r\n  }\r\n  return (\r\n    <div className={'find'}>\r\n      <div\r\n        style={{\r\n          fontSize: '20px',\r\n          fontWeight: 800,\r\n          width: '100%',\r\n          marginBottom: '16px',\r\n        }}\r\n      >\r\n        框架默写\r\n      </div>\r\n      <Button type=\"primary\" size={'large'} onClick={find} loading={loading1}>\r\n        查询框架\r\n      </Button>\r\n      <Table\r\n        columns={columns1}\r\n        dataSource={data1}\r\n        className={'table1'}\r\n        pagination={false}\r\n      />\r\n      <div\r\n        style={{\r\n          fontSize: '20px',\r\n          fontWeight: 800,\r\n          width: '100%',\r\n          marginBottom: '16px',\r\n        }}\r\n      >\r\n        模拟练题\r\n      </div>\r\n      <Button type=\"primary\" size={'large'} onClick={find1} loading={loading2}>\r\n        获取模拟练题\r\n      </Button>\r\n      <Table\r\n        columns={columns2}\r\n        dataSource={data2}\r\n        className={'table2'}\r\n        pagination={false}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Find\r\n","import React, { useState } from 'react'\r\nimport { createForm } from '@formily/core'\r\nimport { createSchemaField, FormConsumer } from '@formily/react'\r\nimport { Form, FormItem, Input, Select, Submit } from '@formily/antd'\r\nimport { message } from 'antd'\r\nimport { post } from '../../utils/http'\r\nimport './index.css'\r\nconst { TextArea } = Input\r\n\r\nconst form = createForm()\r\n\r\nconst SchemaField = createSchemaField({\r\n  components: {\r\n    FormItem,\r\n    Input,\r\n    Select,\r\n    Input,\r\n    TextArea,\r\n  },\r\n})\r\n\r\nexport default () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const onSubmit = (e) => {\r\n    let formDate = new FormData()\r\n    formDate.append('name', e.name)\r\n    formDate.append('category', e.category || '框架')\r\n    formDate.append('content', e.content)\r\n    let config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    }\r\n    setLoading(true)\r\n    post('/addTopic', formDate, config)\r\n      .then(function () {\r\n        setLoading(false)\r\n        message.success('创建成功')\r\n        // form.reset()\r\n        const init = { name: '', category: '简答题', content: '' }\r\n        if (!e.category) {\r\n          init.category = ''\r\n        }\r\n        form.setValues(init)\r\n      })\r\n      .catch((e) => console.log(e))\r\n  }\r\n  return (\r\n    <div className=\"add\">\r\n      <Form form={form} onAutoSubmit={onSubmit}>\r\n        <SchemaField>\r\n          <SchemaField.String\r\n            required\r\n            name=\"select\"\r\n            title=\"录入类型\"\r\n            default=\"v2\"\r\n            enum={[\r\n              { label: '框架', value: 'v1' },\r\n              { label: '真题题目', value: 'v2' },\r\n            ]}\r\n            x-component=\"Select\"\r\n            x-decorator=\"FormItem\"\r\n            x-reactions={[\r\n              {\r\n                target: 'name',\r\n                fulfill: {\r\n                  // state: {\r\n                  //   display: '{{$self.value}}',\r\n                  // },\r\n                  schema: {\r\n                    title: '{{$self.value === \"v1\"?\"书籍名称\" :\"真题题目\"}}',\r\n                  },\r\n                },\r\n              },\r\n              {\r\n                target: 'content',\r\n                fulfill: {\r\n                  schema: {\r\n                    title: '{{$self.value === \"v1\"?\"框架章节\" :\"题目内容\"}}',\r\n                    'x-component':\r\n                      '{{$self.value === \"v1\"?\"Input\" :\"TextArea\"}}',\r\n                  },\r\n                },\r\n              },\r\n              {\r\n                target: 'category',\r\n                fulfill: {\r\n                  state: {\r\n                    visible: '{{$self.value === \"v2\"}}',\r\n                  },\r\n                },\r\n              },\r\n            ]}\r\n          />\r\n          <SchemaField.String\r\n            name=\"name\"\r\n            title=\"真题题目\"\r\n            x-component=\"Input\"\r\n            x-decorator=\"FormItem\"\r\n            required\r\n          />\r\n          <SchemaField.String\r\n            name=\"category\"\r\n            title=\"题目类别\"\r\n            x-component=\"Select\"\r\n            x-decorator=\"FormItem\"\r\n            default=\"名词解释\"\r\n            required\r\n            enum={[\r\n              { label: '名词解释', value: '名词解释' },\r\n              { label: '简答题', value: '简答题' },\r\n              { label: '论述题', value: '论述题' },\r\n              { label: '综合题', value: '综合题' },\r\n            ]}\r\n          />\r\n          <SchemaField.String\r\n            name=\"content\"\r\n            title=\"题目内容\"\r\n            x-component=\"TextArea\"\r\n            x-decorator=\"FormItem\"\r\n            required\r\n          />\r\n        </SchemaField>\r\n        <div className=\"btn\">\r\n          <Submit block size=\"large\" loading={loading}>\r\n            录入\r\n          </Submit>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Input as AInput, Button, Modal } from 'antd'\r\nimport { SearchOutlined } from '@ant-design/icons'\r\nimport { useDebounceFn } from 'ahooks'\r\nimport { get, post } from '../../utils/http'\r\nimport moment from 'moment'\r\nimport { createForm } from '@formily/core'\r\nimport { createSchemaField, FormConsumer } from '@formily/react'\r\nimport { Form, FormItem, Input, Select, Submit } from '@formily/antd'\r\nimport './index.css'\r\n\r\nconst { TextArea } = Input\r\n\r\nconst form = createForm()\r\n\r\nconst SchemaField = createSchemaField({\r\n  components: {\r\n    FormItem,\r\n    Input,\r\n    Select,\r\n    Input,\r\n    TextArea,\r\n  },\r\n})\r\nconst All = () => {\r\n  const [data, setData] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n  const [current, setCurrent] = useState(1)\r\n  const [total, setTotal] = useState(10)\r\n  const [search, setSearch] = useState('')\r\n  const [inputValue, setInputValue] = useState('')\r\n  const [init, setInit] = useState({})\r\n  const [id, setId] = useState('')\r\n  const find = async () => {\r\n    setLoading(true)\r\n    const res = await get(`/getAll?current=${current}&&search=${search}`)\r\n    setLoading(false)\r\n    setData(res.data.data)\r\n    setTotal(res.data.total)\r\n    const max =\r\n      total / 10 > Math.floor(total / 10)\r\n        ? Math.floor(total / 10) + 1\r\n        : Math.floor(total / 10)\r\n    if (max < current) {\r\n      setCurrent(max)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    find()\r\n  }, [current, search])\r\n  const { run } = useDebounceFn(\r\n    async (e) => {\r\n      setCurrent(1)\r\n      setSearch(e)\r\n    },\r\n    { wait: 500 }\r\n  )\r\n  const deleteTopic = async (id) => {\r\n    setLoading(true)\r\n    let formDate = new FormData()\r\n    formDate.append('id', id)\r\n    let config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    }\r\n    await post(`/delete`, formDate, config)\r\n    await find()\r\n    setLoading(false)\r\n  }\r\n  const onOpen = (e) => {\r\n    setInit({ name: e.name, category: e.category, content: e.content })\r\n    console.log(e, init, {\r\n      name: e.name,\r\n      category: e.category,\r\n      content: e.content,\r\n    })\r\n    form.setInitialValues({\r\n      name: e.name,\r\n      category: e.category,\r\n      content: e.content,\r\n    })\r\n    setId(e.id)\r\n    setVisible(true)\r\n  }\r\n  const handleEditor = async () => {\r\n    setLoading(true)\r\n    setVisible(false)\r\n    const e = form.values\r\n    console.log(e)\r\n    let formDate = new FormData()\r\n    formDate.append('id', id)\r\n    formDate.append('name', e.name)\r\n    formDate.append('category', e.category)\r\n    formDate.append('content', e.content)\r\n    let config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    }\r\n    await post(`/update`, formDate, config)\r\n    await find()\r\n    setLoading(false)\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: '名称',\r\n      dataIndex: 'name',\r\n      render: (e) => {\r\n        return (\r\n          <span\r\n            style={{ width: '200px', display: 'flex', marginRight: '-180px' }}\r\n          >\r\n            {e}\r\n          </span>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      title: '题目类型',\r\n      dataIndex: 'category',\r\n      width: 200,\r\n    },\r\n    {\r\n      title: '描述',\r\n      dataIndex: 'content',\r\n      render: (e) => {\r\n        return (\r\n          <span\r\n            style={{ width: '200px', display: 'flex', marginRight: '-180px' }}\r\n          >\r\n            {e}\r\n          </span>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      title: '创建时间',\r\n      dataIndex: 'create_time',\r\n      width: 200,\r\n      render: (e) => {\r\n        return moment(e).format('YYYY-MM-DD')\r\n      },\r\n    },\r\n    {\r\n      title: '操作',\r\n      width: 200,\r\n      render: (e) => {\r\n        return (\r\n          <div style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => onOpen(e)}\r\n              style={{ marginRight: '8px' }}\r\n            >\r\n              编辑\r\n            </Button>\r\n            <Button\r\n              danger\r\n              onClick={() => {\r\n                deleteTopic(e.id)\r\n              }}\r\n            >\r\n              删除\r\n            </Button>\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n  return (\r\n    <div className={'find'}>\r\n      <AInput\r\n        placeholder=\"请输入题目名字\"\r\n        allowClear\r\n        prefix={<SearchOutlined></SearchOutlined>}\r\n        size=\"large\"\r\n        onChange={({ target: { value } }) => {\r\n          setInputValue(value)\r\n          run(value)\r\n        }}\r\n        value={inputValue}\r\n      />\r\n      <Table\r\n        loading={loading}\r\n        columns={columns}\r\n        dataSource={data}\r\n        className={'table2'}\r\n        title={() => '题库'}\r\n        pagination={{ current, total, pageSize: 10 }}\r\n        onChange={(p) => {\r\n          setCurrent(p.current)\r\n        }}\r\n      />\r\n      <Modal\r\n        visible={visible}\r\n        destroyOnClose\r\n        onOk={handleEditor}\r\n        onCancel={() => setVisible(false)}\r\n        okText={'提交'}\r\n        cancelText=\"取消\"\r\n        width={'60%'}\r\n      >\r\n        <Form form={form} className={'form-box'}>\r\n          <SchemaField>\r\n            <SchemaField.String\r\n              name=\"name\"\r\n              title=\"真题题目\"\r\n              x-component=\"Input\"\r\n              x-decorator=\"FormItem\"\r\n              required\r\n            />\r\n            <SchemaField.String\r\n              name=\"category\"\r\n              title=\"题目类别\"\r\n              x-component=\"Select\"\r\n              x-decorator=\"FormItem\"\r\n              default=\"名词解释\"\r\n              required\r\n              enum={[\r\n                { label: '名词解释', value: '名词解释' },\r\n                { label: '简答题', value: '简答题' },\r\n                { label: '论述题', value: '论述题' },\r\n                { label: '综合题', value: '综合题' },\r\n              ]}\r\n            />\r\n            <SchemaField.String\r\n              name=\"content\"\r\n              title=\"题目内容\"\r\n              x-component=\"TextArea\"\r\n              x-decorator=\"FormItem\"\r\n              required\r\n            />\r\n          </SchemaField>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default All\r\n","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n} from 'react-router-dom'\r\nimport Find from '../../components/find'\r\nimport Add from '../../components/add'\r\nimport All from '../../components/all'\r\nimport './index.css'\r\n\r\nconst Center = () => {\r\n  return (\r\n    // <Router>\r\n      <div className={'router'}>\r\n          <Redirect path=\"/\" to=\"/find\" />\r\n          <Route exact path=\"/find\" component={Find} />\r\n          <Route exact path=\"/add\" component={Add} />\r\n          <Route exact path=\"/all\" component={All} />\r\n      </div>\r\n    // </Router>\r\n  )\r\n}\r\n\r\nexport default Center\r\n","import React from 'react'\r\nimport Left from './left'\r\nimport './index.css'\r\nimport Center from './center'\r\n\r\nconst WrapperContent = () => {\r\n  console.log('fick')\r\n  return (\r\n    <div className={'box'}>\r\n      <Left></Left>\r\n      <Center></Center>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(WrapperContent)\r\n","import React from 'react'\nimport Content from './content/index'\nimport './app.css'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport {\n  RecoilRoot,\n} from 'recoil'\nfunction App() {\n  return (\n    <RecoilRoot>\n      <Router>\n        <div className={'app'}>\n          <Content></Content>\n        </div>\n      </Router>\n    </RecoilRoot>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\n// import 'antd/dist/antd.css';\nimport './index.css';\nimport '@formily/antd/dist/antd.css';\nimport 'antd/dist/antd.css';\n\nmoment.locale('zh-cn');\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}