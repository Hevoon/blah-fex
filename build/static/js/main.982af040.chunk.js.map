{"version":3,"sources":["components/menu/index.jsx","content/left/index.jsx","utils/http.js","store/index.js","components/find/index.jsx","components/add/index.jsx","components/all/index.jsx","content/center/index.jsx","content/index.jsx","app.jsx","index.js"],"names":["SubMenu","Menu","WrapperMenu","history","useHistory","onClick","key","push","style","width","height","flexBasis","flexGrow","flexShrink","background","defaultSelectedKeys","defaultOpenKeys","mode","icon","AppstoreOutlined","title","Item","Left","get","url","params","Promise","resolve","reject","axios","then","response","catch","err","post","data","config","defaults","baseURL","framework","atom","default","undefined","topic","columns1","dataIndex","render","e","display","marginRight","columns2","moment","format","TextArea","Input","form","createForm","SchemaField","createSchemaField","components","FormItem","Select","Find","useRecoilState","data1","setData1","data2","setData2","useState","loading1","setloading1","loading2","setloading2","visible","setVisible","jian","ming","lun","zong","setting","setSetting","useEffect","value1","localStorage","getItem","value2","JSON","parse","find","a","value","res","length","message","info","stringData","stringify","window","setItem","find1","handleEditor","values","console","log","className","fontSize","fontWeight","marginBottom","type","size","loading","marginLeft","removeItem","columns","dataSource","pagination","SettingFilled","setValues","destroyOnClose","onOk","onCancel","okText","cancelText","Number","name","x-component","x-decorator","setLoading","useRef","onAutoSubmit","formDate","FormData","append","category","content","headers","success","init","String","required","enum","label","x-reactions","target","fulfill","schema","state","x-component-props","autoFocus","block","All","setData","current","setCurrent","total","setTotal","search","setSearch","inputValue","setInputValue","setInit","id","setId","max","Math","floor","run","useDebounceFn","wait","deleteTopic","justifyContent","onOpen","danger","placeholder","allowClear","prefix","SearchOutlined","onChange","pageSize","p","Center","path","to","exact","component","Add","WrapperContent","React","memo","App","locale","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.982af040.chunk.js","sourcesContent":["import { Menu } from 'antd'\r\nimport { AppstoreOutlined } from '@ant-design/icons'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst { SubMenu } = Menu\r\n\r\nconst WrapperMenu = () => {\r\n  const history = useHistory()\r\n  const push = (key) => {\r\n    history.push(`/${key.key}`)\r\n  }\r\n  return (\r\n    <Menu\r\n      onClick={push}\r\n      style={{\r\n        width: 256,\r\n        height: '100%',\r\n        flexBasis: '256px',\r\n        flexGrow: 0,\r\n        flexShrink: 0,\r\n        background: 'rgba(81, 47, 124, 0.1)',\r\n      }}\r\n      defaultSelectedKeys={['find']}\r\n      defaultOpenKeys={['sub1']}\r\n      mode=\"inline\"\r\n    >\r\n      <SubMenu key=\"sub1\" icon={<AppstoreOutlined />} title=\"操作中心\">\r\n        {/* <Menu.ItemGroup key=\"g1\" title=\"题目\"> */}\r\n        <Menu.Item key=\"find\">抽取题目</Menu.Item>\r\n        <Menu.Item key=\"add\">录入题目</Menu.Item>\r\n        <Menu.Item key=\"all\">题库</Menu.Item>\r\n        {/* </Menu.ItemGroup> */}\r\n      </SubMenu>\r\n    </Menu>\r\n  )\r\n}\r\n\r\nexport default WrapperMenu\r\n","import React from 'react'\r\nimport Menu from '../../components/menu'\r\n\r\n\r\nconst Left = ()=>{\r\n  return <Menu></Menu>\r\n}\r\nexport default Left","//封装常用方法\n\nimport axios from 'axios';\n\n// axios.defaults.timeout = 5000;\naxios.defaults.baseURL = 'http://101.132.132.215:3000';\n// axios.defaults.baseURL = 'http://localhost:3000';\n\n\n//封装get方法\nexport function get(url, params = {}) {\n    return new Promise((resolve, reject) => {\n        axios.get(url, {\n            params: params\n        })\n            .then(response => {\n                resolve(response);\n            })\n            .catch(err => {\n                reject(err);\n            })\n    })\n}\n\n//封装post请求\nexport function post(url, data = {},config={}) {\n    return new Promise((resolve, reject) => {\n        axios.post(url, data,config)\n            .then(response => {\n                resolve(response);\n            })\n            .catch(err => {\n                reject(err);\n            })\n    })\n}\n\n//封装put请求\nexport function put(url, data = {}) {\n    return new Promise((resolve, reject) => {\n        axios.put(url, data)\n            .then(response => {\n                resolve(response);\n            })\n            .catch(err => {\n                reject(err);\n            })\n    })\n}\n\n//封装delete请求\nexport function deleteDate(url){\n    return new Promise((resolve, reject) => {\n        axios.delete(url)\n            .then(response => {\n                resolve(response);\n            })\n            .catch(err => {\n                reject(err);\n            })\n    })\n}\n\n// //请求成功提示消息\n// export function success(str) {\n//     return this.$message({\n//         message: str,\n//         type: 'success'\n//     })\n// }\n//\n// //请求失败提示消息\n// export function fail(str) {\n//     return this.$message({\n//         message: str,\n//         type: 'error'\n//     })\n// }\n","import {\r\n  RecoilRoot,\r\n  atom,\r\n  selector,\r\n  useRecoilState,\r\n  useRecoilValue,\r\n} from 'recoil'\r\n\r\nexport const framework = atom({\r\n  key: 'framework',\r\n  default: undefined,\r\n})\r\n\r\nexport const topic = atom({\r\n  key: 'topic',\r\n  default: undefined,\r\n})\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Radio, Button, message, Modal } from 'antd'\r\nimport { useRecoilState } from 'recoil'\r\nimport { SettingFilled } from '@ant-design/icons'\r\nimport { get } from '../../utils/http'\r\nimport moment from 'moment'\r\nimport { createForm } from '@formily/core'\r\nimport { createSchemaField, FormConsumer } from '@formily/react'\r\nimport { Form, FormItem, Input, Select, Submit } from '@formily/antd'\r\nimport { topic, framework } from '../../store'\r\nimport './index.css'\r\nconst columns1 = [\r\n  {\r\n    title: '书籍名称',\r\n    dataIndex: 'name',\r\n    render: (e) => {\r\n      return (\r\n        <span\r\n          style={{ width: '200px', display: 'flex', marginRight: '-180px' }}\r\n        >\r\n          {e}\r\n        </span>\r\n      )\r\n    },\r\n  },\r\n  {\r\n    title: '框架章节',\r\n    dataIndex: 'content',\r\n    render: (e) => {\r\n      return (\r\n        <span\r\n          style={{ width: '200px', display: 'flex', marginRight: '-180px' }}\r\n        >\r\n          {e}\r\n        </span>\r\n      )\r\n    },\r\n  },\r\n]\r\nconst columns2 = [\r\n  {\r\n    title: '名称',\r\n    dataIndex: 'name',\r\n    render: (e) => {\r\n      return (\r\n        <span\r\n          style={{ width: '200px', display: 'flex', marginRight: '-180px' }}\r\n        >\r\n          {e}\r\n        </span>\r\n      )\r\n    },\r\n  },\r\n  {\r\n    title: '题目类型',\r\n    dataIndex: 'category',\r\n  },\r\n  {\r\n    title: '描述',\r\n    dataIndex: 'content',\r\n    render: (e) => {\r\n      return (\r\n        <span\r\n          style={{ width: '200px', display: 'flex', marginRight: '-180px' }}\r\n        >\r\n          {e}\r\n        </span>\r\n      )\r\n    },\r\n  },\r\n  {\r\n    title: '创建时间',\r\n    dataIndex: 'create_time',\r\n    render: (e) => {\r\n      return moment(e).format('YYYY-MM-DD')\r\n    },\r\n  },\r\n]\r\nconst { TextArea } = Input\r\nconst form = createForm()\r\nconst SchemaField = createSchemaField({\r\n  components: {\r\n    FormItem,\r\n    Input,\r\n    Select,\r\n    Input,\r\n    TextArea,\r\n  },\r\n})\r\nconst Find = () => {\r\n  const [data1, setData1] = useRecoilState(framework) || []\r\n  const [data2, setData2] = useRecoilState(topic) || []\r\n  // const [data1, setData1] = useState([])\r\n  // const [data2, setData2] = useState([])\r\n  const [loading1, setloading1] = useState(false)\r\n  const [loading2, setloading2] = useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n  const [setting, setSetting] = useState({\r\n    jian: 5,\r\n    ming: 7,\r\n    lun: 2,\r\n    zong: 1,\r\n  })\r\n  useEffect(() => {\r\n    const value1 = localStorage.getItem('framework')\r\n    const value2 = localStorage.getItem('topic')\r\n    setData1(JSON.parse(value1))\r\n    setData2(JSON.parse(value2))\r\n  }, [])\r\n  const clear1 = () => {\r\n    localStorage.removeItem('framework')\r\n    message.info('已清除抽到的框架')\r\n  }\r\n  const clear2 = () => {\r\n    localStorage.removeItem('topic')\r\n    message.info('已清除抽到的题目')\r\n  }\r\n  const find = async () => {\r\n    setloading1(true)\r\n    const value = localStorage.getItem('framework')\r\n    if (!value) {\r\n      const res = await get('/getFramework')\r\n      setloading1(false)\r\n      if (!res.data || res.data.length < 1) {\r\n        message.info('未录入框架')\r\n      }\r\n      const stringData = JSON.stringify(res.data)\r\n      window.localStorage.setItem('framework', stringData)\r\n      setData1(res.data)\r\n    } else {\r\n      message.info('本地已存在抽到的题目')\r\n      setData1(JSON.parse(value))\r\n      setloading1(false)\r\n    }\r\n  }\r\n  const find1 = async () => {\r\n    setloading2(true)\r\n    const value = localStorage.getItem('topic')\r\n    if (!value) {\r\n      const res = await get(\r\n        `/getTopic?jian=${setting.jian || 5}&&ming=${setting.ming || 7}&&lun=${\r\n          setting.lun || 2\r\n        }&&zong=${setting.zong || 1}`\r\n      )\r\n      if (!res.data || res.data.length < 1) {\r\n        message.info('未查询到数据')\r\n      }\r\n      setloading2(false)\r\n      const stringData = JSON.stringify(res.data)\r\n      window.localStorage.setItem('topic', stringData)\r\n      setData2(res.data)\r\n    } else {\r\n      message.info('本地已存在抽到的题目')\r\n      setData2(JSON.parse(value))\r\n      setloading2(false)\r\n    }\r\n  }\r\n  const handleEditor = async () => {\r\n    const e = form.values || {}\r\n    console.log(e)\r\n    setSetting({\r\n      jian: e.jian || 5,\r\n      ming: e.ming || 7,\r\n      lun: e.lun || 2,\r\n      zong: e.zong || 1,\r\n    })\r\n    setVisible(false)\r\n  }\r\n  return (\r\n    <div className={'find'}>\r\n      <div\r\n        style={{\r\n          fontSize: '20px',\r\n          fontWeight: 800,\r\n          width: '100%',\r\n          marginBottom: '16px',\r\n        }}\r\n      >\r\n        框架默写\r\n      </div>\r\n      <Button type=\"primary\" size={'large'} onClick={find} loading={loading1}>\r\n        查询框架\r\n      </Button>\r\n      <Button\r\n        type=\"primary\"\r\n        size={'large'}\r\n        style={{ marginLeft: '20px' }}\r\n        onClick={clear1}\r\n      >\r\n        清除本地框架\r\n      </Button>\r\n      <Table\r\n        columns={columns1}\r\n        dataSource={data1}\r\n        className={'table1'}\r\n        pagination={false}\r\n      />\r\n      <div\r\n        style={{\r\n          fontSize: '20px',\r\n          fontWeight: 800,\r\n          width: '100%',\r\n          marginBottom: '16px',\r\n        }}\r\n      >\r\n        模拟练题\r\n      </div>\r\n      <Button type=\"primary\" size={'large'} onClick={find1} loading={loading2}>\r\n        获取模拟练题\r\n      </Button>\r\n      <Button\r\n        type=\"primary\"\r\n        style={{ marginLeft: '20px' }}\r\n        size={'large'}\r\n        onClick={clear2}\r\n      >\r\n        清除本地题目\r\n      </Button>\r\n      <Button\r\n        type=\"primary\"\r\n        style={{ marginLeft: '20px' }}\r\n        icon={<SettingFilled />}\r\n        onClick={() => {\r\n          form.setValues({ ...setting })\r\n          setVisible(true)\r\n        }}\r\n        size=\"large\"\r\n      >\r\n        设置题目数量\r\n      </Button>\r\n      <Table\r\n        columns={columns2}\r\n        dataSource={data2}\r\n        className={'table2'}\r\n        pagination={false}\r\n      />\r\n      <Modal\r\n        visible={visible}\r\n        destroyOnClose\r\n        onOk={handleEditor}\r\n        onCancel={() => setVisible(false)}\r\n        okText={'提交'}\r\n        cancelText=\"取消\"\r\n        width={'60%'}\r\n        title={'设置查题数量'}\r\n      >\r\n        <Form form={form} className={'form-box'}>\r\n          <SchemaField>\r\n            <SchemaField.Number\r\n              name=\"jian\"\r\n              title=\"简答题数量\"\r\n              x-component=\"Input\"\r\n              x-decorator=\"FormItem\"\r\n            />\r\n            <SchemaField.Number\r\n              name=\"ming\"\r\n              title=\"名词解释数量\"\r\n              x-component=\"Input\"\r\n              x-decorator=\"FormItem\"\r\n            />\r\n            <SchemaField.Number\r\n              name=\"lun\"\r\n              title=\"论述题数量\"\r\n              x-component=\"Input\"\r\n              x-decorator=\"FormItem\"\r\n            />\r\n            <SchemaField.Number\r\n              name=\"zong\"\r\n              title=\"综合题数量\"\r\n              x-component=\"Input\"\r\n              x-decorator=\"FormItem\"\r\n            />\r\n          </SchemaField>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Find\r\n","import React, { useState, useRef } from 'react'\r\nimport { createForm } from '@formily/core'\r\nimport { createSchemaField, FormConsumer } from '@formily/react'\r\nimport { Form, FormItem, Input, Select, Submit } from '@formily/antd'\r\nimport { message } from 'antd'\r\nimport { post } from '../../utils/http'\r\nimport './index.css'\r\nconst { TextArea } = Input\r\n\r\nconst form = createForm()\r\n\r\nconst SchemaField = createSchemaField({\r\n  components: {\r\n    FormItem,\r\n    Input,\r\n    Select,\r\n    Input,\r\n    TextArea,\r\n  },\r\n})\r\n\r\nexport default () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const ref = useRef(null)\r\n  const onSubmit = (e) => {\r\n    let formDate = new FormData()\r\n    formDate.append('name', e.name)\r\n    formDate.append('category', e.category || '框架')\r\n    formDate.append('content', e.content)\r\n    let config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    }\r\n    setLoading(true)\r\n    post('/addTopic', formDate, config)\r\n      .then(function () {\r\n        setLoading(false)\r\n        message.success('创建成功')\r\n        // form.reset()\r\n        const init = { name: '', category: e.category || '', content: '' }\r\n        if (!e.category) {\r\n          init.category = ''\r\n        }\r\n        form.setValues(init)\r\n      })\r\n      .catch((e) => console.log(e))\r\n  }\r\n  return (\r\n    <div className=\"add\">\r\n      {!loading && (\r\n        <Form form={form} onAutoSubmit={onSubmit}>\r\n          <SchemaField>\r\n            <SchemaField.String\r\n              required\r\n              name=\"select\"\r\n              title=\"录入类型\"\r\n              default=\"v2\"\r\n              enum={[\r\n                { label: '框架', value: 'v1' },\r\n                { label: '模拟题目', value: 'v2' },\r\n              ]}\r\n              x-component=\"Select\"\r\n              x-decorator=\"FormItem\"\r\n              x-reactions={[\r\n                {\r\n                  target: 'name',\r\n                  fulfill: {\r\n                    // state: {\r\n                    //   display: '{{$self.value}}',\r\n                    // },\r\n                    schema: {\r\n                      title: '{{$self.value === \"v1\"?\"书籍名称\" :\"真题题目\"}}',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  target: 'content',\r\n                  fulfill: {\r\n                    schema: {\r\n                      title: '{{$self.value === \"v1\"?\"框架章节\" :\"题目内容\"}}',\r\n                      'x-component':\r\n                        '{{$self.value === \"v1\"?\"Input\" :\"TextArea\"}}',\r\n                    },\r\n                  },\r\n                },\r\n                {\r\n                  target: 'category',\r\n                  fulfill: {\r\n                    state: {\r\n                      visible: '{{$self.value === \"v2\"}}',\r\n                    },\r\n                  },\r\n                },\r\n              ]}\r\n            />\r\n            <SchemaField.String\r\n              name=\"name\"\r\n              title=\"真题题目\"\r\n              x-component=\"Input\"\r\n              x-decorator=\"FormItem\"\r\n              x-component-props={{ autoFocus: true }}\r\n              required\r\n            />\r\n            <SchemaField.String\r\n              name=\"category\"\r\n              title=\"题目类别\"\r\n              x-component=\"Select\"\r\n              x-decorator=\"FormItem\"\r\n              default=\"名词解释\"\r\n              required\r\n              enum={[\r\n                { label: '名词解释', value: '名词解释' },\r\n                { label: '简答题', value: '简答题' },\r\n                { label: '论述题', value: '论述题' },\r\n                { label: '综合题', value: '综合题' },\r\n              ]}\r\n            />\r\n            <SchemaField.String\r\n              name=\"content\"\r\n              title=\"题目内容\"\r\n              x-component=\"TextArea\"\r\n              x-decorator=\"FormItem\"\r\n              x-component-props={{ className: 'content' }}\r\n            />\r\n          </SchemaField>\r\n          <div className=\"btn\">\r\n            <Submit block size=\"large\" loading={loading}>\r\n              录入\r\n            </Submit>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Input as AInput, Button, Modal } from 'antd'\r\nimport { SearchOutlined } from '@ant-design/icons'\r\nimport { useDebounceFn } from 'ahooks'\r\nimport { get, post } from '../../utils/http'\r\nimport moment from 'moment'\r\nimport { createForm } from '@formily/core'\r\nimport { createSchemaField, FormConsumer } from '@formily/react'\r\nimport { Form, FormItem, Input, Select, Submit } from '@formily/antd'\r\nimport './index.css'\r\n\r\nconst { TextArea } = Input\r\n\r\nconst form = createForm()\r\n\r\nconst SchemaField = createSchemaField({\r\n  components: {\r\n    FormItem,\r\n    Input,\r\n    Select,\r\n    Input,\r\n    TextArea,\r\n  },\r\n})\r\nconst All = () => {\r\n  const [data, setData] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n  const [current, setCurrent] = useState(1)\r\n  const [total, setTotal] = useState(10)\r\n  const [search, setSearch] = useState('')\r\n  const [inputValue, setInputValue] = useState('')\r\n  const [init, setInit] = useState({})\r\n  const [id, setId] = useState('')\r\n  const find = async () => {\r\n    setLoading(true)\r\n    const res = await get(`/getAll?current=${current}&&search=${search}`)\r\n    setLoading(false)\r\n    setData(res.data.data)\r\n    setTotal(res.data.total)\r\n    const max =\r\n      total / 10 > Math.floor(total / 10)\r\n        ? Math.floor(total / 10) + 1\r\n        : Math.floor(total / 10)\r\n    if (max < current) {\r\n      setCurrent(max || 1)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    find()\r\n  }, [current, search])\r\n  const { run } = useDebounceFn(\r\n    async (e) => {\r\n      setCurrent(1)\r\n      setSearch(e)\r\n    },\r\n    { wait: 500 }\r\n  )\r\n  const deleteTopic = async (id) => {\r\n    setLoading(true)\r\n    let formDate = new FormData()\r\n    formDate.append('id', id)\r\n    let config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    }\r\n    await post(`/delete`, formDate, config)\r\n    await find()\r\n    setLoading(false)\r\n  }\r\n  const onOpen = (e) => {\r\n    setInit({ name: e.name, category: e.category, content: e.content })\r\n    form.setValues({\r\n      name: e.name,\r\n      category: e.category,\r\n      content: e.content,\r\n    })\r\n    console.log(e)\r\n    setId(e.id)\r\n    setVisible(true)\r\n  }\r\n  const handleEditor = async () => {\r\n    setLoading(true)\r\n    setVisible(false)\r\n    const e = form.values\r\n    console.log(e)\r\n    let formDate = new FormData()\r\n    formDate.append('id', id)\r\n    formDate.append('name', e.name)\r\n    formDate.append('category', e.category)\r\n    formDate.append('content', e.content)\r\n    let config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    }\r\n    await post(`/update`, formDate, config)\r\n    await find()\r\n    setLoading(false)\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: '名称',\r\n      dataIndex: 'name',\r\n      render: (e) => {\r\n        return (\r\n          <span\r\n            style={{ width: '200px', display: 'flex', marginRight: '-180px' }}\r\n          >\r\n            {e}\r\n          </span>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      title: '题目类型',\r\n      dataIndex: 'category',\r\n      width: 200,\r\n    },\r\n    {\r\n      title: '描述',\r\n      dataIndex: 'content',\r\n      render: (e) => {\r\n        return (\r\n          <span\r\n            style={{ width: '200px', display: 'flex', marginRight: '-180px' }}\r\n          >\r\n            {e}\r\n          </span>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      title: '创建时间',\r\n      dataIndex: 'create_time',\r\n      width: 200,\r\n      render: (e) => {\r\n        return moment(e).format('YYYY-MM-DD')\r\n      },\r\n    },\r\n    {\r\n      title: '操作',\r\n      width: 200,\r\n      render: (e) => {\r\n        return (\r\n          <div style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => onOpen(e)}\r\n              style={{ marginRight: '8px' }}\r\n            >\r\n              编辑\r\n            </Button>\r\n            <Button\r\n              danger\r\n              onClick={() => {\r\n                deleteTopic(e.id)\r\n              }}\r\n            >\r\n              删除\r\n            </Button>\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n  return (\r\n    <div className={'find'}>\r\n      <AInput\r\n        placeholder=\"请输入题目名字\"\r\n        allowClear\r\n        prefix={<SearchOutlined></SearchOutlined>}\r\n        size=\"large\"\r\n        onChange={({ target: { value } }) => {\r\n          setInputValue(value)\r\n          run(value)\r\n        }}\r\n        value={inputValue}\r\n      />\r\n      <Table\r\n        loading={loading}\r\n        columns={columns}\r\n        dataSource={data}\r\n        className={'table2'}\r\n        title={() => '题库'}\r\n        pagination={{ current, total, pageSize: 10 }}\r\n        onChange={(p) => {\r\n          setCurrent(p.current)\r\n        }}\r\n      />\r\n      <Modal\r\n        visible={visible}\r\n        destroyOnClose\r\n        onOk={handleEditor}\r\n        onCancel={() => setVisible(false)}\r\n        okText={'提交'}\r\n        cancelText=\"取消\"\r\n        width={'60%'}\r\n      >\r\n        <Form form={form} className={'form-box'}>\r\n          <SchemaField>\r\n            <SchemaField.String\r\n              name=\"name\"\r\n              title=\"真题题目\"\r\n              x-component=\"Input\"\r\n              x-decorator=\"FormItem\"\r\n              required\r\n            />\r\n            <SchemaField.String\r\n              name=\"category\"\r\n              title=\"题目类别\"\r\n              x-component=\"Select\"\r\n              x-decorator=\"FormItem\"\r\n              default=\"名词解释\"\r\n              required\r\n              enum={[\r\n                { label: '名词解释', value: '名词解释' },\r\n                { label: '简答题', value: '简答题' },\r\n                { label: '论述题', value: '论述题' },\r\n                { label: '综合题', value: '综合题' },\r\n              ]}\r\n            />\r\n            <SchemaField.String\r\n              name=\"content\"\r\n              title=\"题目内容\"\r\n              x-component=\"TextArea\"\r\n              x-decorator=\"FormItem\"\r\n              required\r\n            />\r\n          </SchemaField>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default All\r\n","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n} from 'react-router-dom'\r\nimport Find from '../../components/find'\r\nimport Add from '../../components/add'\r\nimport All from '../../components/all'\r\nimport './index.css'\r\n\r\nconst Center = () => {\r\n  return (\r\n    // <Router>\r\n      <div className={'router'}>\r\n          <Redirect path=\"/\" to=\"/find\" />\r\n          <Route exact path=\"/find\" component={Find} />\r\n          <Route exact path=\"/add\" component={Add} />\r\n          <Route exact path=\"/all\" component={All} />\r\n      </div>\r\n    // </Router>\r\n  )\r\n}\r\n\r\nexport default Center\r\n","import React from 'react'\r\nimport Left from './left'\r\nimport './index.css'\r\nimport Center from './center'\r\n\r\nconst WrapperContent = () => {\r\n  console.log('fick')\r\n  return (\r\n    <div className={'box'}>\r\n      <Left></Left>\r\n      <Center></Center>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(WrapperContent)\r\n","import React from 'react'\nimport Content from './content/index'\nimport './app.css'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport {\n  RecoilRoot,\n} from 'recoil'\nfunction App() {\n  return (\n    <RecoilRoot>\n      <Router>\n        <div className={'app'}>\n          <Content></Content>\n        </div>\n      </Router>\n    </RecoilRoot>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\n// import 'antd/dist/antd.css';\nimport './index.css';\nimport '@formily/antd/dist/antd.css';\nimport 'antd/dist/antd.css';\n\nmoment.locale('zh-cn');\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}